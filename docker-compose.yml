services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_INVENTORY_BASE_URL=${NEXT_PUBLIC_INVENTORY_BASE_URL}
      - NEXT_PUBLIC_SUPPLIER_BASE_URL=${NEXT_PUBLIC_SUPPLIER_BASE_URL}
      - NEXT_PUBLIC_PURCHASE_ORDER_BASE_URL=${NEXT_PUBLIC_PURCHASE_ORDER_BASE_URL}
      - NEXT_PUBLIC_SALE_BASE_URL=${NEXT_PUBLIC_SALE_BASE_URL}
      - NEXT_PUBLIC_RECEIPT_BASE_URL=${NEXT_PUBLIC_RECEIPT_BASE_URL}
    env_file:
      - .env.local
    ports:
      - "3000:3000"
    depends_on:
      - loyverse-connect

  loyverse-connect:
    build:
      context: ./backend/internal/LoyverseConnect
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - LOYVERSE_API_TOKEN=${LOYVERSE_API_TOKEN}
    env_file:
      - .env.local
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  inventory-management:
    build:
      context: . 
      dockerfile: backend/internal/InventoryManagement/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - GOOGLE_SHEETS_SPREADSHEET_ID=${GOOGLE_SHEETS_SPREADSHEET_ID}
    env_file:
      - .env.local
    ports:
      - "8082:8082"
    volumes:
      - ./backend/internal/InventoryManagement/credentials.json:/app/credentials.json
    depends_on:
      db:
        condition: service_healthy

  supplier-management:
    build:
      context: .
      dockerfile: backend/internal/SupplierManagement/Dockerfile
    environment:
      - PORT=8083
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env.local
    ports:
      - "8083:8083"
    depends_on:
      db:
        condition: service_healthy

  sale-management:
    build:
      context: .
      dockerfile: backend/internal/SaleManagement/Dockerfile
    environment:
      - PORT=8084
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env.local
    ports:
      - "8084:8084"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: loyuser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: loyverse_cache
    env_file:
      - .env.local
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loyuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: {}

networks:
  default:
    driver: bridge